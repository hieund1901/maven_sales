version: "3.7"
services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:${KAFKA_VERSION:-latest}
    hostname: zookeeper
    user: root
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    networks:
      - bigdata

  # kafka:
  #   image: confluentinc/cp-kafka:${KAFKA_VERSION}
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #   ports:
  #     - "9092:9092"
  #   networks:
  #     - bigdata

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8090:8080
    depends_on:
      - kafka-broker
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-broker:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    volumes:
      - ~/kui/config.yml:/etc/kafkaui/dynamic_config.yaml
    networks:
      - bigdata

  kafka-broker:
    container_name: kafka-broker
    image: confluentinc/cp-kafka:${KAFKA_VERSION}
    hostname: kafka-broker
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_MS: 604800000 # 7 ng√†y
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_COMPRESSION_TYPE: producer
    ports:
      - "9092:9092"
    networks:
      - bigdata

  schema-registry:
    container_name: schema-registry
    image: confluentinc/cp-schema-registry:${KAFKA_VERSION}
    hostname: schema-registry
    healthcheck:
      test: curl -fail --silent http://schema-registry-1:8081/subjects --output /dev/null || exit 1
      interval: 10s
      retries: 20
      start_period: 20s
    depends_on:
      - zookeeper
      - kafka-broker
    ports:
      - "8082:8082"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-broker:9092
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8082
      SCHEMA_REGISTRY_DEBUG: "true"
    networks:
      - bigdata

  kafka-connect:
    container_name: kafka-connect
    image: debezium/connect:2.5
    user: root
    ports:
      - "8083:8083"
    depends_on:
      - zookeeper
      - kafka-broker
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka-broker:9092
      CONNECT_REST_PORT: 8083
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect-cluster-configs
      OFFSET_STORAGE_TOPIC: connect-cluster-offsets
      STATUS_STORAGE_TOPIC: connect-cluster-status
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER_SCHEMAS_ENABLE: "true"
    networks:
      - bigdata

networks:
  bigdata:
    driver: bridge
